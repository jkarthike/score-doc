
"use client";

import {
  AlertDialog,
  AlertDialogAction,
  AlertDialogContent,
  AlertDialogDescription,
  AlertDialogFooter,
  AlertDialogHeader,
  AlertDialogTitle,
} from "@/components/ui/alert-dialog";
import { useLanguage } from "@/contexts/language-context";

type DisclaimerModalProps = {
  isOpen: boolean;
  onAcknowledge: () => void;
};

export default function DisclaimerModal({ isOpen, onAcknowledge }: DisclaimerModalProps) {
  const { translations } = useLanguage();

  if (!isOpen) {
    return null;
  }

  return (
    <AlertDialog open={isOpen} onOpenChange={(open) => {
      if (!open) { // If the dialog is being closed
        onAcknowledge();
      }
    }}>
      <AlertDialogContent className="max-w-md">
        <AlertDialogHeader>
          <AlertDialogTitle>{translations.disclaimerTitle || "Important Disclaimer"}</AlertDialogTitle>
          <AlertDialogDescription className="text-sm text-muted-foreground py-2 whitespace-pre-line">
            {translations.disclaimerContent ||
              "The scores and recommendations provided by this application are generated by an AI model (Gemini AI) and are for informational purposes only. They are not a substitute for professional medical advice, diagnosis, or treatment.\n\nAs a user, you assume full responsibility for any decisions or actions taken based on the information provided by this application. Always consult with a qualified healthcare professional for any medical concerns."}
          </AlertDialogDescription>
        </AlertDialogHeader>
        <AlertDialogFooter>
          <AlertDialogAction onClick={onAcknowledge} className="w-full">
            {translations.disclaimerAcknowledgeButton || "Acknowledge & Continue"}
          </AlertDialogAction>
        </AlertDialogFooter>
      </AlertDialogContent>
    </AlertDialog>
  );
}
